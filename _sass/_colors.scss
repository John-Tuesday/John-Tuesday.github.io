@use "sass:color" as clr;

$-primary-container: #7c334f;
$-primary-surface: #ece4d8;

$-alt-primary-container: #cd596b;
$-alt-primary-surface: #f1f1f1;

$-secondary-container: #5b7f98;
$-secondary-surface: #ece4d8;

$-unknown: blue;

$-lighten: +50%;
$-darken: -50%;

@function get-color($is-surface: true, $is-primary: true, $is-alt: true, $level: 0) {
    $is-container: not $is-surface;
    $is-secondary: not $is-primary;

    @if $is-alt and $level == 0 and $is-surface {
        @return $-alt-primary-surface;
    } @else if $is-alt and $is-primary and $is-container {
        @return $-alt-primary-container;
    } @else if not $is-alt and $is-primary and $is-surface {
        @return $-primary-surface;
    } @else if not $is-alt and $is-primary and $is-container {
        @return $-primary-container;
    } @else if not $is-alt and $is-secondary and $is-surface {
        @return $-secondary-surface
    } @else if not $is-alt and $is-secondary and $is-container {
        @return $-secondary-container
    }

    @warn "Color with properties is not defined.";
    @return $-unknown;
}

@function -is-dark($color) {
    $white: clr.lightness($color);

    @return $white < 50%;
}

@function -lightness($darken: true) {
    @if $darken {
        @return $-darken;
    }
    @return $-lighten;
}

@function hover($color, $follow: $color) {
    $color1: clr.adjust($color, $hue: 270deg);
    $color2: clr.adjust($follow, $hue: 270deg);
    $light: -lightness(-is-dark($color2));

    @return clr.scale($color1, $lightness: $light);
}

.primary-container {
    color: $-primary-surface;
    background-color: $-primary-container;

    padding: 4px;
}

.primary-bordered {
    @extend .primary-container;

    padding: 6px;

    border-color: $-alt-primary-container;
    border-width: 2px;
    border-style: solid;
}

@mixin alt-primary-container {
    & {
        color: $-alt-primary-surface;
        background-color: $-alt-primary-container;
    }
}

@mixin test {
    & {
        color: purple;
    }
}

